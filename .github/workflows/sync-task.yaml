name: Sync task to DynamoDB

on:
  workflow_call:
    inputs:
      region:
        required: true
        type: string
      role-duration-seconds:
        required: false
        type: number
        default: 3600
      exercise-table-name:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      role-to-assume:
        required: true

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.region }}
        role-to-assume: ${{ secrets.role-to-assume }}
        role-duration-seconds: ${{ inputs.role-duration-seconds }}

    - name: Check item exists in a table
      id: check-item
      run: |
        item=$(aws dynamodb get-item \
          --table-name ${{ inputs.exercise-table-name }} \
          --key exerciseId={S=$(jq -r '.exerciseId.S' metadata.json)})
        if [[ -n $item ]]; then
          echo "exists=true">>$GITHUB_OUTPUT
        else
          echo "exists=false">>$GITHUB_OUTPUT
        fi

    - name: Create new item in a table
      if: steps.check-item.outputs.exists == 'false'
      run: |
        aws dynamodb put-item \
          --table-name ${{ inputs.exercise-table-name }} \
          --item file://metadata.json

    - name: Update existing item in a table
      if: steps.check-item.outputs.exists == 'true'
      run: |
        aws dynamodb delete-item \
          --table-name ${{ inputs.exercise-table-name }} \
          --key exerciseId={S=$(jq -r '.exerciseId.S' metadata.json)}
        aws dynamodb put-item \
          --table-name ${{ inputs.exercise-table-name }} \
          --item file://metadata.json
