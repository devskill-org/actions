name: Docker build

on:
  workflow_call:
    inputs:
      region:
        required: true
        type: string
      context:
        required: false
        type: string
        default: .
      image-name:
        required: true
        type: string
      role-duration-seconds:
        required: false
        type: number
        default: 3600
      no-cache:
        required: false
        type: string
        default: 'false'
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      role-to-assume:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hash: steps.tags.outputs.hash
      ref: steps.tags.outputs.tag
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.region }}
        role-to-assume: ${{ secrets.role-to-assume }}
        role-duration-seconds: ${{ inputs.role-duration-seconds }}

    - name: Login to ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ steps.ecr-login.outputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{raw}}
          type=sha,prefix=,format=long,enable=true

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      if: ${{ github.event.inputs.no-cache == 'false' }}
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push without cache
      if: ${{ github.event.inputs.no-cache == 'true' }}
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
